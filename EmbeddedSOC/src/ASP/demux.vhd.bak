library ieee;
use ieee.std_logic_1164.all;


entity demux is
port (

	clk : in std_logic;
	inputData : in std_logic_vector(15 downto 0);
	
	out_sel : in std_logic_vector(1 downto 0);
	
	output_1 : out std_logic_vector(15 downto 0);
	output_2 : out std_logic_vector(15 downto 0);
	output_3 : out std_logic_vector(15 downto 0);
	output_4 : out std_logic_vector(15 downto 0)

);
end entity;
architecture demuxBehave of demux is


begin

process(clk)
begin

if (rising_edge(clk)) then
	case out_sel is
		when "00" => 
		output_1 <= inputData;
		output_2 <= x"0000";
		output_3 <= x"0000";
		output_4 <= x"0000";
		
		when "01" => 
		output_1 <= x"0000";
		output_2 <= inputData;
		output_3 <= x"0000";
		output_4 <= x"0000";
		
		when "10" => 
		output_1 <= x"0000";
		output_2 <= x"0000";
		output_3 <= inputData;
		output_4 <= x"0000";
		
		when "11" => 
		output_1 <= x"0000";
		output_2 <= x"0000";
		output_3 <= inputData;
		output_4 <= x"0000";
		
		when others =>
		output_1 <= x"0000";
		output_2 <= x"0000";
		output_3 <= x"0000";
		output_4 <= x"0000";
	end case;
end if;
end process;

end demuxBehave;