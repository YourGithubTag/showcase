#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'Conv_Accel_0_weight_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CONV_ACCEL_0_WEIGHT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_CONV_ACCEL_0_WEIGHT_SLAVE_BASE 0x1
#define HPS_0_CONV_ACCEL_0_WEIGHT_SLAVE_SPAN 1
#define HPS_0_CONV_ACCEL_0_WEIGHT_SLAVE_END 0x1

/*
 * Macros for device 'Conv_Accel_0_output_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CONV_ACCEL_0_OUTPUT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_CONV_ACCEL_0_OUTPUT_SLAVE_BASE 0x2
#define HPS_0_CONV_ACCEL_0_OUTPUT_SLAVE_SPAN 1
#define HPS_0_CONV_ACCEL_0_OUTPUT_SLAVE_END 0x2

/*
 * Macros for device 'Conv_Accel_0_feat_map_in_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_BASE 0x3
#define HPS_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_SPAN 1
#define HPS_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_END 0x3

/*
 * Macros for device 'Conv_Accel_0_control_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CONV_ACCEL_0_CONTROL_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_CONV_ACCEL_0_CONTROL_SLAVE_BASE 0x4
#define HPS_0_CONV_ACCEL_0_CONTROL_SLAVE_SPAN 1
#define HPS_0_CONV_ACCEL_0_CONTROL_SLAVE_END 0x4

/*
 * Macros for device 'Conv_Accel_0_output_flag', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_CONV_ACCEL_0_OUTPUT_FLAG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_TYPE Conv_Accel
#define HPS_0_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_NAME Conv_Accel_0
#define HPS_0_CONV_ACCEL_0_OUTPUT_FLAG_BASE 0x5
#define HPS_0_CONV_ACCEL_0_OUTPUT_FLAG_SPAN 1
#define HPS_0_CONV_ACCEL_0_OUTPUT_FLAG_END 0x5

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_SYSID_QSYS_BASE 0x10000
#define HPS_0_SYSID_QSYS_SPAN 8
#define HPS_0_SYSID_QSYS_END 0x10007
#define HPS_0_SYSID_QSYS_ID 2899645186
#define HPS_0_SYSID_QSYS_TIMESTAMP 1633322826

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_LED_PIO_COMPONENT_NAME led_pio
#define HPS_0_LED_PIO_BASE 0x10040
#define HPS_0_LED_PIO_SPAN 16
#define HPS_0_LED_PIO_END 0x1004f
#define HPS_0_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_LED_PIO_CAPTURE 0
#define HPS_0_LED_PIO_DATA_WIDTH 10
#define HPS_0_LED_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_LED_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_LED_PIO_EDGE_TYPE NONE
#define HPS_0_LED_PIO_FREQ 50000000
#define HPS_0_LED_PIO_HAS_IN 0
#define HPS_0_LED_PIO_HAS_OUT 1
#define HPS_0_LED_PIO_HAS_TRI 0
#define HPS_0_LED_PIO_IRQ_TYPE NONE
#define HPS_0_LED_PIO_RESET_VALUE 1023

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define HPS_0_DIPSW_PIO_BASE 0x10080
#define HPS_0_DIPSW_PIO_SPAN 16
#define HPS_0_DIPSW_PIO_END 0x1008f
#define HPS_0_DIPSW_PIO_IRQ 0
#define HPS_0_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_DIPSW_PIO_CAPTURE 1
#define HPS_0_DIPSW_PIO_DATA_WIDTH 10
#define HPS_0_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_DIPSW_PIO_EDGE_TYPE ANY
#define HPS_0_DIPSW_PIO_FREQ 50000000
#define HPS_0_DIPSW_PIO_HAS_IN 1
#define HPS_0_DIPSW_PIO_HAS_OUT 0
#define HPS_0_DIPSW_PIO_HAS_TRI 0
#define HPS_0_DIPSW_PIO_IRQ_TYPE EDGE
#define HPS_0_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BUTTON_PIO_COMPONENT_NAME button_pio
#define HPS_0_BUTTON_PIO_BASE 0x100c0
#define HPS_0_BUTTON_PIO_SPAN 16
#define HPS_0_BUTTON_PIO_END 0x100cf
#define HPS_0_BUTTON_PIO_IRQ 1
#define HPS_0_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BUTTON_PIO_CAPTURE 1
#define HPS_0_BUTTON_PIO_DATA_WIDTH 4
#define HPS_0_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BUTTON_PIO_EDGE_TYPE FALLING
#define HPS_0_BUTTON_PIO_FREQ 50000000
#define HPS_0_BUTTON_PIO_HAS_IN 1
#define HPS_0_BUTTON_PIO_HAS_OUT 0
#define HPS_0_BUTTON_PIO_HAS_TRI 0
#define HPS_0_BUTTON_PIO_IRQ_TYPE EDGE
#define HPS_0_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'simple_inc_0', class 'simple_inc'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_SIMPLE_INC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_SIMPLE_INC_0_COMPONENT_TYPE simple_inc
#define HPS_0_SIMPLE_INC_0_COMPONENT_NAME simple_inc_0
#define HPS_0_SIMPLE_INC_0_BASE 0x100d0
#define HPS_0_SIMPLE_INC_0_SPAN 4
#define HPS_0_SIMPLE_INC_0_END 0x100d3

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_JTAG_UART_BASE 0x20000
#define HPS_0_JTAG_UART_SPAN 8
#define HPS_0_JTAG_UART_END 0x20007
#define HPS_0_JTAG_UART_IRQ 2
#define HPS_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_BASE 0x0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_END 0xffff
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_BRIDGES_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'Conv_Accel_0_weight_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CONV_ACCEL_0_WEIGHT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_BRIDGES_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_BRIDGES_CONV_ACCEL_0_WEIGHT_SLAVE_BASE 0x1
#define HPS_0_BRIDGES_CONV_ACCEL_0_WEIGHT_SLAVE_SPAN 1
#define HPS_0_BRIDGES_CONV_ACCEL_0_WEIGHT_SLAVE_END 0x1

/*
 * Macros for device 'Conv_Accel_0_output_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_SLAVE_BASE 0x2
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_SLAVE_SPAN 1
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_SLAVE_END 0x2

/*
 * Macros for device 'Conv_Accel_0_feat_map_in_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_BRIDGES_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_BRIDGES_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_BASE 0x3
#define HPS_0_BRIDGES_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_SPAN 1
#define HPS_0_BRIDGES_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_END 0x3

/*
 * Macros for device 'Conv_Accel_0_control_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CONV_ACCEL_0_CONTROL_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_BRIDGES_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_BRIDGES_CONV_ACCEL_0_CONTROL_SLAVE_BASE 0x4
#define HPS_0_BRIDGES_CONV_ACCEL_0_CONTROL_SLAVE_SPAN 1
#define HPS_0_BRIDGES_CONV_ACCEL_0_CONTROL_SLAVE_END 0x4

/*
 * Macros for device 'Conv_Accel_0_output_flag', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_FLAG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_TYPE Conv_Accel
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_NAME Conv_Accel_0
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_FLAG_BASE 0x5
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_FLAG_SPAN 1
#define HPS_0_BRIDGES_CONV_ACCEL_0_OUTPUT_FLAG_END 0x5

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_BRIDGES_SYSID_QSYS_BASE 0x10000
#define HPS_0_BRIDGES_SYSID_QSYS_SPAN 8
#define HPS_0_BRIDGES_SYSID_QSYS_END 0x10007
#define HPS_0_BRIDGES_SYSID_QSYS_ID 2899645186
#define HPS_0_BRIDGES_SYSID_QSYS_TIMESTAMP 1633322826

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_LED_PIO_COMPONENT_NAME led_pio
#define HPS_0_BRIDGES_LED_PIO_BASE 0x10040
#define HPS_0_BRIDGES_LED_PIO_SPAN 16
#define HPS_0_BRIDGES_LED_PIO_END 0x1004f
#define HPS_0_BRIDGES_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_LED_PIO_CAPTURE 0
#define HPS_0_BRIDGES_LED_PIO_DATA_WIDTH 10
#define HPS_0_BRIDGES_LED_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_LED_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_LED_PIO_EDGE_TYPE NONE
#define HPS_0_BRIDGES_LED_PIO_FREQ 50000000
#define HPS_0_BRIDGES_LED_PIO_HAS_IN 0
#define HPS_0_BRIDGES_LED_PIO_HAS_OUT 1
#define HPS_0_BRIDGES_LED_PIO_HAS_TRI 0
#define HPS_0_BRIDGES_LED_PIO_IRQ_TYPE NONE
#define HPS_0_BRIDGES_LED_PIO_RESET_VALUE 1023

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define HPS_0_BRIDGES_DIPSW_PIO_BASE 0x10080
#define HPS_0_BRIDGES_DIPSW_PIO_SPAN 16
#define HPS_0_BRIDGES_DIPSW_PIO_END 0x1008f
#define HPS_0_BRIDGES_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_BRIDGES_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_DIPSW_PIO_CAPTURE 1
#define HPS_0_BRIDGES_DIPSW_PIO_DATA_WIDTH 10
#define HPS_0_BRIDGES_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_DIPSW_PIO_EDGE_TYPE ANY
#define HPS_0_BRIDGES_DIPSW_PIO_FREQ 50000000
#define HPS_0_BRIDGES_DIPSW_PIO_HAS_IN 1
#define HPS_0_BRIDGES_DIPSW_PIO_HAS_OUT 0
#define HPS_0_BRIDGES_DIPSW_PIO_HAS_TRI 0
#define HPS_0_BRIDGES_DIPSW_PIO_IRQ_TYPE EDGE
#define HPS_0_BRIDGES_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_BUTTON_PIO_COMPONENT_NAME button_pio
#define HPS_0_BRIDGES_BUTTON_PIO_BASE 0x100c0
#define HPS_0_BRIDGES_BUTTON_PIO_SPAN 16
#define HPS_0_BRIDGES_BUTTON_PIO_END 0x100cf
#define HPS_0_BRIDGES_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_BRIDGES_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_BUTTON_PIO_CAPTURE 1
#define HPS_0_BRIDGES_BUTTON_PIO_DATA_WIDTH 4
#define HPS_0_BRIDGES_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_BUTTON_PIO_EDGE_TYPE FALLING
#define HPS_0_BRIDGES_BUTTON_PIO_FREQ 50000000
#define HPS_0_BRIDGES_BUTTON_PIO_HAS_IN 1
#define HPS_0_BRIDGES_BUTTON_PIO_HAS_OUT 0
#define HPS_0_BRIDGES_BUTTON_PIO_HAS_TRI 0
#define HPS_0_BRIDGES_BUTTON_PIO_IRQ_TYPE EDGE
#define HPS_0_BRIDGES_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'simple_inc_0', class 'simple_inc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_SIMPLE_INC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_SIMPLE_INC_0_COMPONENT_TYPE simple_inc
#define HPS_0_BRIDGES_SIMPLE_INC_0_COMPONENT_NAME simple_inc_0
#define HPS_0_BRIDGES_SIMPLE_INC_0_BASE 0x100d0
#define HPS_0_BRIDGES_SIMPLE_INC_0_SPAN 4
#define HPS_0_BRIDGES_SIMPLE_INC_0_END 0x100d3

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_BRIDGES_JTAG_UART_BASE 0x20000
#define HPS_0_BRIDGES_JTAG_UART_SPAN 8
#define HPS_0_BRIDGES_JTAG_UART_END 0x20007
#define HPS_0_BRIDGES_JTAG_UART_READ_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_BRIDGES_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_BRIDGES_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_BRIDGES_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_BRIDGES_HPS_0_GMAC0_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_BRIDGES_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_BRIDGES_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_BRIDGES_HPS_0_GMAC1_SPAN 8192
#define HPS_0_BRIDGES_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_BRIDGES_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_BRIDGES_HPS_0_SDMMC_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_BRIDGES_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_BRIDGES_HPS_0_QSPI_SPAN 256
#define HPS_0_BRIDGES_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_BRIDGES_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_BRIDGES_HPS_0_GPIO0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_BRIDGES_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_BRIDGES_HPS_0_GPIO1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_BRIDGES_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_BRIDGES_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_BRIDGES_HPS_0_GPIO2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_BRIDGES_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_BRIDGES_HPS_0_L3REGS_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_BRIDGES_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_BRIDGES_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_BRIDGES_HPS_0_NAND0_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_BRIDGES_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_BRIDGES_HPS_0_USB0_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_BRIDGES_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_BRIDGES_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_BRIDGES_HPS_0_USB1_SPAN 262144
#define HPS_0_BRIDGES_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_BRIDGES_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_BRIDGES_HPS_0_DCAN0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_BRIDGES_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_BRIDGES_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_BRIDGES_HPS_0_DCAN1_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_BRIDGES_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_BRIDGES_HPS_0_UART0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART0_END 0xffc020ff
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_BRIDGES_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_BRIDGES_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_BRIDGES_HPS_0_UART1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_UART1_END 0xffc030ff
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_BRIDGES_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_BRIDGES_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_BRIDGES_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_BRIDGES_HPS_0_I2C0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_BRIDGES_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_BRIDGES_HPS_0_I2C1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_BRIDGES_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_BRIDGES_HPS_0_I2C2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_BRIDGES_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_BRIDGES_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_BRIDGES_HPS_0_I2C3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_BRIDGES_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_BRIDGES_HPS_0_TIMER0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_BRIDGES_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_BRIDGES_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_BRIDGES_HPS_0_TIMER1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_BRIDGES_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_BRIDGES_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_BRIDGES_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_BRIDGES_HPS_0_TIMER2_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_BRIDGES_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_BRIDGES_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_BRIDGES_HPS_0_TIMER3_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_BRIDGES_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_BRIDGES_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_BRIDGES_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_BRIDGES_HPS_0_RSTMGR_SPAN 256
#define HPS_0_BRIDGES_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_BRIDGES_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_BRIDGES_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_BRIDGES_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_BRIDGES_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_BRIDGES_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_BRIDGES_HPS_0_DMA_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_BRIDGES_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_BRIDGES_HPS_0_SPIM0_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_BRIDGES_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_BRIDGES_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_BRIDGES_HPS_0_SPIM1_SPAN 256
#define HPS_0_BRIDGES_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_BRIDGES_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_BRIDGES_HPS_0_TIMER_SPAN 256
#define HPS_0_BRIDGES_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_BRIDGES_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_BRIDGES_HPS_0_L2_BASE 0xfffef000
#define HPS_0_BRIDGES_HPS_0_L2_SPAN 4096
#define HPS_0_BRIDGES_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_BRIDGES_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_BASE 0xc0000000
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_END 0xc000ffff
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_0_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'Conv_Accel_0_weight_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CONV_ACCEL_0_WEIGHT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_WEIGHT_SLAVE_BASE 0xff200001
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_WEIGHT_SLAVE_SPAN 1
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_WEIGHT_SLAVE_END 0xff200001

/*
 * Macros for device 'Conv_Accel_0_output_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_SLAVE_BASE 0xff200002
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_SLAVE_SPAN 1
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_SLAVE_END 0xff200002

/*
 * Macros for device 'Conv_Accel_0_feat_map_in_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_BASE 0xff200003
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_SPAN 1
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_END 0xff200003

/*
 * Macros for device 'Conv_Accel_0_control_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CONV_ACCEL_0_CONTROL_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_CONTROL_SLAVE_BASE 0xff200004
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_CONTROL_SLAVE_SPAN 1
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_CONTROL_SLAVE_END 0xff200004

/*
 * Macros for device 'Conv_Accel_0_output_flag', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_FLAG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_FLAG_BASE 0xff200005
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_FLAG_SPAN 1
#define HPS_0_ARM_A9_0_CONV_ACCEL_0_OUTPUT_FLAG_END 0xff200005

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_0_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_0_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_0_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_0_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_0_SYSID_QSYS_TIMESTAMP 1633322826

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_LED_PIO_COMPONENT_NAME led_pio
#define HPS_0_ARM_A9_0_LED_PIO_BASE 0xff210040
#define HPS_0_ARM_A9_0_LED_PIO_SPAN 16
#define HPS_0_ARM_A9_0_LED_PIO_END 0xff21004f
#define HPS_0_ARM_A9_0_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_LED_PIO_CAPTURE 0
#define HPS_0_ARM_A9_0_LED_PIO_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_LED_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_LED_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_LED_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_LED_PIO_FREQ 50000000
#define HPS_0_ARM_A9_0_LED_PIO_HAS_IN 0
#define HPS_0_ARM_A9_0_LED_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_0_LED_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_0_LED_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_LED_PIO_RESET_VALUE 1023

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define HPS_0_ARM_A9_0_DIPSW_PIO_BASE 0xff210080
#define HPS_0_ARM_A9_0_DIPSW_PIO_SPAN 16
#define HPS_0_ARM_A9_0_DIPSW_PIO_END 0xff21008f
#define HPS_0_ARM_A9_0_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_ARM_A9_0_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_DIPSW_PIO_CAPTURE 1
#define HPS_0_ARM_A9_0_DIPSW_PIO_DATA_WIDTH 10
#define HPS_0_ARM_A9_0_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_DIPSW_PIO_EDGE_TYPE ANY
#define HPS_0_ARM_A9_0_DIPSW_PIO_FREQ 50000000
#define HPS_0_ARM_A9_0_DIPSW_PIO_HAS_IN 1
#define HPS_0_ARM_A9_0_DIPSW_PIO_HAS_OUT 0
#define HPS_0_ARM_A9_0_DIPSW_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_0_DIPSW_PIO_IRQ_TYPE EDGE
#define HPS_0_ARM_A9_0_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_BUTTON_PIO_COMPONENT_NAME button_pio
#define HPS_0_ARM_A9_0_BUTTON_PIO_BASE 0xff2100c0
#define HPS_0_ARM_A9_0_BUTTON_PIO_SPAN 16
#define HPS_0_ARM_A9_0_BUTTON_PIO_END 0xff2100cf
#define HPS_0_ARM_A9_0_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_ARM_A9_0_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_BUTTON_PIO_CAPTURE 1
#define HPS_0_ARM_A9_0_BUTTON_PIO_DATA_WIDTH 4
#define HPS_0_ARM_A9_0_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_BUTTON_PIO_EDGE_TYPE FALLING
#define HPS_0_ARM_A9_0_BUTTON_PIO_FREQ 50000000
#define HPS_0_ARM_A9_0_BUTTON_PIO_HAS_IN 1
#define HPS_0_ARM_A9_0_BUTTON_PIO_HAS_OUT 0
#define HPS_0_ARM_A9_0_BUTTON_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_0_BUTTON_PIO_IRQ_TYPE EDGE
#define HPS_0_ARM_A9_0_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'simple_inc_0', class 'simple_inc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_SIMPLE_INC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_SIMPLE_INC_0_COMPONENT_TYPE simple_inc
#define HPS_0_ARM_A9_0_SIMPLE_INC_0_COMPONENT_NAME simple_inc_0
#define HPS_0_ARM_A9_0_SIMPLE_INC_0_BASE 0xff2100d0
#define HPS_0_ARM_A9_0_SIMPLE_INC_0_SPAN 4
#define HPS_0_ARM_A9_0_SIMPLE_INC_0_END 0xff2100d3

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_0_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_0_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_0_JTAG_UART_END 0xff220007
#define HPS_0_ARM_A9_0_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_0_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_BASE 0xc0000000
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SPAN 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_END 0xc000ffff
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_WRITABLE 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_0_ARM_A9_1_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'Conv_Accel_0_weight_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CONV_ACCEL_0_WEIGHT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_WEIGHT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_WEIGHT_SLAVE_BASE 0xff200001
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_WEIGHT_SLAVE_SPAN 1
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_WEIGHT_SLAVE_END 0xff200001

/*
 * Macros for device 'Conv_Accel_0_output_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_SLAVE_BASE 0xff200002
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_SLAVE_SPAN 1
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_SLAVE_END 0xff200002

/*
 * Macros for device 'Conv_Accel_0_feat_map_in_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_BASE 0xff200003
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_SPAN 1
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_FEAT_MAP_IN_SLAVE_END 0xff200003

/*
 * Macros for device 'Conv_Accel_0_control_slave', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CONV_ACCEL_0_CONTROL_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_CONTROL_SLAVE_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_CONTROL_SLAVE_BASE 0xff200004
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_CONTROL_SLAVE_SPAN 1
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_CONTROL_SLAVE_END 0xff200004

/*
 * Macros for device 'Conv_Accel_0_output_flag', class 'Conv_Accel'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_FLAG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_TYPE Conv_Accel
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_FLAG_COMPONENT_NAME Conv_Accel_0
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_FLAG_BASE 0xff200005
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_FLAG_SPAN 1
#define HPS_0_ARM_A9_1_CONV_ACCEL_0_OUTPUT_FLAG_END 0xff200005

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define HPS_0_ARM_A9_1_SYSID_QSYS_BASE 0xff210000
#define HPS_0_ARM_A9_1_SYSID_QSYS_SPAN 8
#define HPS_0_ARM_A9_1_SYSID_QSYS_END 0xff210007
#define HPS_0_ARM_A9_1_SYSID_QSYS_ID 2899645186
#define HPS_0_ARM_A9_1_SYSID_QSYS_TIMESTAMP 1633322826

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_LED_PIO_COMPONENT_NAME led_pio
#define HPS_0_ARM_A9_1_LED_PIO_BASE 0xff210040
#define HPS_0_ARM_A9_1_LED_PIO_SPAN 16
#define HPS_0_ARM_A9_1_LED_PIO_END 0xff21004f
#define HPS_0_ARM_A9_1_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_LED_PIO_CAPTURE 0
#define HPS_0_ARM_A9_1_LED_PIO_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_LED_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_LED_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_LED_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_LED_PIO_FREQ 50000000
#define HPS_0_ARM_A9_1_LED_PIO_HAS_IN 0
#define HPS_0_ARM_A9_1_LED_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_1_LED_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_1_LED_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_LED_PIO_RESET_VALUE 1023

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define HPS_0_ARM_A9_1_DIPSW_PIO_BASE 0xff210080
#define HPS_0_ARM_A9_1_DIPSW_PIO_SPAN 16
#define HPS_0_ARM_A9_1_DIPSW_PIO_END 0xff21008f
#define HPS_0_ARM_A9_1_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_ARM_A9_1_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_DIPSW_PIO_CAPTURE 1
#define HPS_0_ARM_A9_1_DIPSW_PIO_DATA_WIDTH 10
#define HPS_0_ARM_A9_1_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_DIPSW_PIO_EDGE_TYPE ANY
#define HPS_0_ARM_A9_1_DIPSW_PIO_FREQ 50000000
#define HPS_0_ARM_A9_1_DIPSW_PIO_HAS_IN 1
#define HPS_0_ARM_A9_1_DIPSW_PIO_HAS_OUT 0
#define HPS_0_ARM_A9_1_DIPSW_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_1_DIPSW_PIO_IRQ_TYPE EDGE
#define HPS_0_ARM_A9_1_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_BUTTON_PIO_COMPONENT_NAME button_pio
#define HPS_0_ARM_A9_1_BUTTON_PIO_BASE 0xff2100c0
#define HPS_0_ARM_A9_1_BUTTON_PIO_SPAN 16
#define HPS_0_ARM_A9_1_BUTTON_PIO_END 0xff2100cf
#define HPS_0_ARM_A9_1_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define HPS_0_ARM_A9_1_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_BUTTON_PIO_CAPTURE 1
#define HPS_0_ARM_A9_1_BUTTON_PIO_DATA_WIDTH 4
#define HPS_0_ARM_A9_1_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_BUTTON_PIO_EDGE_TYPE FALLING
#define HPS_0_ARM_A9_1_BUTTON_PIO_FREQ 50000000
#define HPS_0_ARM_A9_1_BUTTON_PIO_HAS_IN 1
#define HPS_0_ARM_A9_1_BUTTON_PIO_HAS_OUT 0
#define HPS_0_ARM_A9_1_BUTTON_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_1_BUTTON_PIO_IRQ_TYPE EDGE
#define HPS_0_ARM_A9_1_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'simple_inc_0', class 'simple_inc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_SIMPLE_INC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_SIMPLE_INC_0_COMPONENT_TYPE simple_inc
#define HPS_0_ARM_A9_1_SIMPLE_INC_0_COMPONENT_NAME simple_inc_0
#define HPS_0_ARM_A9_1_SIMPLE_INC_0_BASE 0xff2100d0
#define HPS_0_ARM_A9_1_SIMPLE_INC_0_SPAN 4
#define HPS_0_ARM_A9_1_SIMPLE_INC_0_END 0xff2100d3

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_0_ARM_A9_1_JTAG_UART_BASE 0xff220000
#define HPS_0_ARM_A9_1_JTAG_UART_SPAN 8
#define HPS_0_ARM_A9_1_JTAG_UART_END 0xff220007
#define HPS_0_ARM_A9_1_JTAG_UART_READ_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_READ_THRESHOLD 8
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_DEPTH 64
#define HPS_0_ARM_A9_1_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_1_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_ONCHIP_MEMORY2_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_BASE 0x0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_SPAN 65536
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_END 0xffff
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_DUAL_PORT 0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_WRITABLE 1
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define MASTER_NON_SEC_ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_SYSID_QSYS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define MASTER_NON_SEC_SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define MASTER_NON_SEC_SYSID_QSYS_BASE 0x10000
#define MASTER_NON_SEC_SYSID_QSYS_SPAN 8
#define MASTER_NON_SEC_SYSID_QSYS_END 0x10007
#define MASTER_NON_SEC_SYSID_QSYS_ID 2899645186
#define MASTER_NON_SEC_SYSID_QSYS_TIMESTAMP 1633322826

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_LED_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_LED_PIO_COMPONENT_NAME led_pio
#define MASTER_NON_SEC_LED_PIO_BASE 0x10040
#define MASTER_NON_SEC_LED_PIO_SPAN 16
#define MASTER_NON_SEC_LED_PIO_END 0x1004f
#define MASTER_NON_SEC_LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define MASTER_NON_SEC_LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_LED_PIO_CAPTURE 0
#define MASTER_NON_SEC_LED_PIO_DATA_WIDTH 10
#define MASTER_NON_SEC_LED_PIO_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_LED_PIO_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_LED_PIO_EDGE_TYPE NONE
#define MASTER_NON_SEC_LED_PIO_FREQ 50000000
#define MASTER_NON_SEC_LED_PIO_HAS_IN 0
#define MASTER_NON_SEC_LED_PIO_HAS_OUT 1
#define MASTER_NON_SEC_LED_PIO_HAS_TRI 0
#define MASTER_NON_SEC_LED_PIO_IRQ_TYPE NONE
#define MASTER_NON_SEC_LED_PIO_RESET_VALUE 1023

/*
 * Macros for device 'dipsw_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_DIPSW_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_DIPSW_PIO_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_DIPSW_PIO_COMPONENT_NAME dipsw_pio
#define MASTER_NON_SEC_DIPSW_PIO_BASE 0x10080
#define MASTER_NON_SEC_DIPSW_PIO_SPAN 16
#define MASTER_NON_SEC_DIPSW_PIO_END 0x1008f
#define MASTER_NON_SEC_DIPSW_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define MASTER_NON_SEC_DIPSW_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_DIPSW_PIO_CAPTURE 1
#define MASTER_NON_SEC_DIPSW_PIO_DATA_WIDTH 10
#define MASTER_NON_SEC_DIPSW_PIO_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_DIPSW_PIO_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_DIPSW_PIO_EDGE_TYPE ANY
#define MASTER_NON_SEC_DIPSW_PIO_FREQ 50000000
#define MASTER_NON_SEC_DIPSW_PIO_HAS_IN 1
#define MASTER_NON_SEC_DIPSW_PIO_HAS_OUT 0
#define MASTER_NON_SEC_DIPSW_PIO_HAS_TRI 0
#define MASTER_NON_SEC_DIPSW_PIO_IRQ_TYPE EDGE
#define MASTER_NON_SEC_DIPSW_PIO_RESET_VALUE 0

/*
 * Macros for device 'button_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_BUTTON_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_BUTTON_PIO_COMPONENT_TYPE altera_avalon_pio
#define MASTER_NON_SEC_BUTTON_PIO_COMPONENT_NAME button_pio
#define MASTER_NON_SEC_BUTTON_PIO_BASE 0x100c0
#define MASTER_NON_SEC_BUTTON_PIO_SPAN 16
#define MASTER_NON_SEC_BUTTON_PIO_END 0x100cf
#define MASTER_NON_SEC_BUTTON_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define MASTER_NON_SEC_BUTTON_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define MASTER_NON_SEC_BUTTON_PIO_CAPTURE 1
#define MASTER_NON_SEC_BUTTON_PIO_DATA_WIDTH 4
#define MASTER_NON_SEC_BUTTON_PIO_DO_TEST_BENCH_WIRING 0
#define MASTER_NON_SEC_BUTTON_PIO_DRIVEN_SIM_VALUE 0
#define MASTER_NON_SEC_BUTTON_PIO_EDGE_TYPE FALLING
#define MASTER_NON_SEC_BUTTON_PIO_FREQ 50000000
#define MASTER_NON_SEC_BUTTON_PIO_HAS_IN 1
#define MASTER_NON_SEC_BUTTON_PIO_HAS_OUT 0
#define MASTER_NON_SEC_BUTTON_PIO_HAS_TRI 0
#define MASTER_NON_SEC_BUTTON_PIO_IRQ_TYPE EDGE
#define MASTER_NON_SEC_BUTTON_PIO_RESET_VALUE 0

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define MASTER_NON_SEC_JTAG_UART_COMPONENT_NAME jtag_uart
#define MASTER_NON_SEC_JTAG_UART_BASE 0x20000
#define MASTER_NON_SEC_JTAG_UART_SPAN 8
#define MASTER_NON_SEC_JTAG_UART_END 0x20007
#define MASTER_NON_SEC_JTAG_UART_READ_DEPTH 64
#define MASTER_NON_SEC_JTAG_UART_READ_THRESHOLD 8
#define MASTER_NON_SEC_JTAG_UART_WRITE_DEPTH 64
#define MASTER_NON_SEC_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'intr_capturer_0', class 'intr_capturer'
 * Path to the device is from the master group 'master_non_sec'.
 * The macros are prefixed with 'MASTER_NON_SEC_INTR_CAPTURER_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_NON_SEC_INTR_CAPTURER_0_COMPONENT_TYPE intr_capturer
#define MASTER_NON_SEC_INTR_CAPTURER_0_COMPONENT_NAME intr_capturer_0
#define MASTER_NON_SEC_INTR_CAPTURER_0_BASE 0x30000
#define MASTER_NON_SEC_INTR_CAPTURER_0_SPAN 8
#define MASTER_NON_SEC_INTR_CAPTURER_0_END 0x30007

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define MASTER_SECURE_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define MASTER_SECURE_HPS_0_AXI_SDRAM_BASE 0x0
#define MASTER_SECURE_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define MASTER_SECURE_HPS_0_AXI_SDRAM_END 0x7fffffff
#define MASTER_SECURE_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define MASTER_SECURE_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define MASTER_SECURE_HPS_0_AXI_SDRAM_WRITABLE 1
#define MASTER_SECURE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MASTER_SECURE_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define MASTER_SECURE_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define MASTER_SECURE_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define MASTER_SECURE_HPS_0_GMAC0_BASE 0xff700000
#define MASTER_SECURE_HPS_0_GMAC0_SPAN 8192
#define MASTER_SECURE_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define MASTER_SECURE_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define MASTER_SECURE_HPS_0_GMAC1_BASE 0xff702000
#define MASTER_SECURE_HPS_0_GMAC1_SPAN 8192
#define MASTER_SECURE_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define MASTER_SECURE_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define MASTER_SECURE_HPS_0_SDMMC_BASE 0xff704000
#define MASTER_SECURE_HPS_0_SDMMC_SPAN 4096
#define MASTER_SECURE_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define MASTER_SECURE_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define MASTER_SECURE_HPS_0_QSPI_BASE 0xff705000
#define MASTER_SECURE_HPS_0_QSPI_SPAN 256
#define MASTER_SECURE_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define MASTER_SECURE_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define MASTER_SECURE_HPS_0_FPGAMGR_BASE 0xff706000
#define MASTER_SECURE_HPS_0_FPGAMGR_SPAN 4096
#define MASTER_SECURE_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define MASTER_SECURE_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define MASTER_SECURE_HPS_0_GPIO0_BASE 0xff708000
#define MASTER_SECURE_HPS_0_GPIO0_SPAN 256
#define MASTER_SECURE_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define MASTER_SECURE_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define MASTER_SECURE_HPS_0_GPIO1_BASE 0xff709000
#define MASTER_SECURE_HPS_0_GPIO1_SPAN 256
#define MASTER_SECURE_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define MASTER_SECURE_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define MASTER_SECURE_HPS_0_GPIO2_BASE 0xff70a000
#define MASTER_SECURE_HPS_0_GPIO2_SPAN 256
#define MASTER_SECURE_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define MASTER_SECURE_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define MASTER_SECURE_HPS_0_L3REGS_BASE 0xff800000
#define MASTER_SECURE_HPS_0_L3REGS_SPAN 4096
#define MASTER_SECURE_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define MASTER_SECURE_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define MASTER_SECURE_HPS_0_NAND0_BASE 0xff900000
#define MASTER_SECURE_HPS_0_NAND0_SPAN 65536
#define MASTER_SECURE_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_USB0_COMPONENT_TYPE usb
#define MASTER_SECURE_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define MASTER_SECURE_HPS_0_USB0_BASE 0xffb00000
#define MASTER_SECURE_HPS_0_USB0_SPAN 262144
#define MASTER_SECURE_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_USB1_COMPONENT_TYPE usb
#define MASTER_SECURE_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define MASTER_SECURE_HPS_0_USB1_BASE 0xffb40000
#define MASTER_SECURE_HPS_0_USB1_SPAN 262144
#define MASTER_SECURE_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define MASTER_SECURE_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define MASTER_SECURE_HPS_0_DCAN0_BASE 0xffc00000
#define MASTER_SECURE_HPS_0_DCAN0_SPAN 4096
#define MASTER_SECURE_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define MASTER_SECURE_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define MASTER_SECURE_HPS_0_DCAN1_BASE 0xffc01000
#define MASTER_SECURE_HPS_0_DCAN1_SPAN 4096
#define MASTER_SECURE_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define MASTER_SECURE_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define MASTER_SECURE_HPS_0_UART0_BASE 0xffc02000
#define MASTER_SECURE_HPS_0_UART0_SPAN 256
#define MASTER_SECURE_HPS_0_UART0_END 0xffc020ff
#define MASTER_SECURE_HPS_0_UART0_FIFO_DEPTH 128
#define MASTER_SECURE_HPS_0_UART0_FIFO_HWFC 0
#define MASTER_SECURE_HPS_0_UART0_FIFO_MODE 1
#define MASTER_SECURE_HPS_0_UART0_FIFO_SWFC 0
#define MASTER_SECURE_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define MASTER_SECURE_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define MASTER_SECURE_HPS_0_UART1_BASE 0xffc03000
#define MASTER_SECURE_HPS_0_UART1_SPAN 256
#define MASTER_SECURE_HPS_0_UART1_END 0xffc030ff
#define MASTER_SECURE_HPS_0_UART1_FIFO_DEPTH 128
#define MASTER_SECURE_HPS_0_UART1_FIFO_HWFC 0
#define MASTER_SECURE_HPS_0_UART1_FIFO_MODE 1
#define MASTER_SECURE_HPS_0_UART1_FIFO_SWFC 0
#define MASTER_SECURE_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define MASTER_SECURE_HPS_0_I2C0_BASE 0xffc04000
#define MASTER_SECURE_HPS_0_I2C0_SPAN 256
#define MASTER_SECURE_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define MASTER_SECURE_HPS_0_I2C1_BASE 0xffc05000
#define MASTER_SECURE_HPS_0_I2C1_SPAN 256
#define MASTER_SECURE_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define MASTER_SECURE_HPS_0_I2C2_BASE 0xffc06000
#define MASTER_SECURE_HPS_0_I2C2_SPAN 256
#define MASTER_SECURE_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define MASTER_SECURE_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define MASTER_SECURE_HPS_0_I2C3_BASE 0xffc07000
#define MASTER_SECURE_HPS_0_I2C3_SPAN 256
#define MASTER_SECURE_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define MASTER_SECURE_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define MASTER_SECURE_HPS_0_TIMER0_BASE 0xffc08000
#define MASTER_SECURE_HPS_0_TIMER0_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define MASTER_SECURE_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define MASTER_SECURE_HPS_0_TIMER1_BASE 0xffc09000
#define MASTER_SECURE_HPS_0_TIMER1_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define MASTER_SECURE_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define MASTER_SECURE_HPS_0_SDRCTL_BASE 0xffc25000
#define MASTER_SECURE_HPS_0_SDRCTL_SPAN 4096
#define MASTER_SECURE_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define MASTER_SECURE_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define MASTER_SECURE_HPS_0_TIMER2_BASE 0xffd00000
#define MASTER_SECURE_HPS_0_TIMER2_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define MASTER_SECURE_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define MASTER_SECURE_HPS_0_TIMER3_BASE 0xffd01000
#define MASTER_SECURE_HPS_0_TIMER3_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define MASTER_SECURE_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define MASTER_SECURE_HPS_0_CLKMGR_BASE 0xffd04000
#define MASTER_SECURE_HPS_0_CLKMGR_SPAN 4096
#define MASTER_SECURE_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define MASTER_SECURE_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define MASTER_SECURE_HPS_0_RSTMGR_BASE 0xffd05000
#define MASTER_SECURE_HPS_0_RSTMGR_SPAN 256
#define MASTER_SECURE_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define MASTER_SECURE_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define MASTER_SECURE_HPS_0_SYSMGR_BASE 0xffd08000
#define MASTER_SECURE_HPS_0_SYSMGR_SPAN 1024
#define MASTER_SECURE_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define MASTER_SECURE_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define MASTER_SECURE_HPS_0_DMA_BASE 0xffe01000
#define MASTER_SECURE_HPS_0_DMA_SPAN 4096
#define MASTER_SECURE_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SPIM0_COMPONENT_TYPE spi
#define MASTER_SECURE_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define MASTER_SECURE_HPS_0_SPIM0_BASE 0xfff00000
#define MASTER_SECURE_HPS_0_SPIM0_SPAN 256
#define MASTER_SECURE_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_SPIM1_COMPONENT_TYPE spi
#define MASTER_SECURE_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define MASTER_SECURE_HPS_0_SPIM1_BASE 0xfff01000
#define MASTER_SECURE_HPS_0_SPIM1_SPAN 256
#define MASTER_SECURE_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define MASTER_SECURE_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define MASTER_SECURE_HPS_0_TIMER_BASE 0xfffec600
#define MASTER_SECURE_HPS_0_TIMER_SPAN 256
#define MASTER_SECURE_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define MASTER_SECURE_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define MASTER_SECURE_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define MASTER_SECURE_HPS_0_ARM_GIC_0_SPAN 4096
#define MASTER_SECURE_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define MASTER_SECURE_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define MASTER_SECURE_HPS_0_L2_BASE 0xfffef000
#define MASTER_SECURE_HPS_0_L2_SPAN 4096
#define MASTER_SECURE_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'master_secure'.
 * The macros are prefixed with 'MASTER_SECURE_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define MASTER_SECURE_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define MASTER_SECURE_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define MASTER_SECURE_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define MASTER_SECURE_HPS_0_AXI_OCRAM_SPAN 65536
#define MASTER_SECURE_HPS_0_AXI_OCRAM_END 0xffffffff
#define MASTER_SECURE_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define MASTER_SECURE_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define MASTER_SECURE_HPS_0_AXI_OCRAM_WRITABLE 1
#define MASTER_SECURE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define MASTER_SECURE_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define MASTER_SECURE_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16


#endif /* _ALTERA_SOC_SYSTEM_H_ */
